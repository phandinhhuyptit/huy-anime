{"version":3,"sources":["skeletons/AnimeCardSkeleton.tsx","components/AnimeCard.tsx","../../src/useIntersectionObserver.ts","../../src/useTrackVisibility.ts","../../src/useInfiniteScroll.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","pages/BrowseScreen/useBrowseList.ts","pages/BrowseScreen/index.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray.js"],"names":["AnimeCardSkeleton","props","className","classNames","AnimeCard","to","slug","src","thumbnail","alt","name","size","time","latestEpisode","DEFAULT_THRESHOLD","useTrackVisibility","rootMargin","args","threshold","nodeRef","useRef","rootRef","observerRef","useState","entry","setEntry","unobserve","useCallback","currentObserver","useEffect","observe","node","root","observer","IntersectionObserver","newEntry","initializeObserver","useIntersectionObserver","ref","result","isVisible","Boolean","wasEverVisible","setWasEverVisible","loading","hasNextPage","onLoadMore","disabled","delayInMs","DEFAULT_DELAY_IN_MS","shouldLoadMore","timer","setTimeout","clearTimeout","_iterableToArray","iter","Symbol","iterator","Object","Array","from","_toConsumableArray","arr","isArray","arrayLikeToArray","unsupportedIterableToArray","TypeError","useBrowseList","useInfiniteQuery","pageParam","getList","page","getNextPageParam","response","pagination","currentPage","totalPage","ALL","RANKINGS","GENRES","BrowseScreen","pathname","useLocation","replace","split","arrayWithHoles","nonIterableRest","category","join","data","isLoading","fetchNextPage","isFetchingNextPage","useInfiniteScroll","sentryRef","current","find","type","includes","list","pages","map","flat","Skeleton","fill","_","i","anime","Loader"],"mappings":"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","file":"static/js/10.479c219c.chunk.js","sourcesContent":["import classNames from \"classnames\";\nimport React from \"react\";\n\ninterface AnimeCardSkeletonProps {\n  className?: string;\n}\n\nconst AnimeCardSkeleton = (props: AnimeCardSkeletonProps) => {\n  return (\n    <div className={classNames(\"-space-x-2 px-2\", props.className)}>\n      <div className=\"w-full h-32\">\n        <div className=\"bg-gray-600 w-full h-full\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default AnimeCardSkeleton;\n","import classNames from \"classnames\";\nimport React from \"react\";\nimport { AiFillPlayCircle } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nimport { Anime } from \"../types\";\nimport Image from \"./Image\";\n\ninterface AnimeCardProps extends Anime {\n  className?: string;\n}\n\nconst AnimeCard = (props: AnimeCardProps) => {\n  return (\n    <Link to={`/info/${props.slug}`}>\n      <div className={classNames(\"relative shadow-lg group\", props.className)}>\n        <Image\n          src={props.thumbnail}\n          alt={props.name}\n          className={classNames(\n            \"w-full h-32 object-cover rounded-md rounded-b-none\"\n          )}\n        />\n\n        <div className=\"absolute inset-0 invisible group-hover:visible bg-black bg-opacity-60 flex items-center justify-center\">\n          <AiFillPlayCircle size={50} className=\"text-white\" />\n        </div>\n\n        <div className=\"px-2 py-1 absolute top-2 left-2 max-w-24 bg-black rounded-md bg-opacity-80\">\n          <p className=\"text-white text-xs line-clamp-1\">\n            {props.time || props.latestEpisode?.name}\n          </p>\n        </div>\n      </div>\n      <div\n        className={classNames(\n          \"bg-background-darker p-3 w-full space-y-2 rounded-b-md min-h-4\"\n        )}\n      >\n        <p className=\"uppercase text-white font-medium text-sm line-clamp-2\">\n          {props.name}\n        </p>\n      </div>\n    </Link>\n  );\n};\n\nexport default AnimeCard;\n","import { useState, useCallback, useEffect, useRef } from 'react';\r\n\r\nconst DEFAULT_ROOT_MARGIN = '0px';\r\nconst DEFAULT_THRESHOLD = [0];\r\n\r\n// eslint-disable-next-line no-undef\r\nexport type IntersectionObserverHookArgs = IntersectionObserverInit;\r\n\r\nexport type IntersectionObserverHookRefCallbackNode = Element | null;\r\n\r\nexport type IntersectionObserverHookRefCallback = (\r\n  node: IntersectionObserverHookRefCallbackNode,\r\n) => void;\r\n\r\nexport type IntersectionObserverHookRootRefCallbackNode = IntersectionObserverHookArgs['root'];\r\n\r\nexport type IntersectionObserverHookRootRefCallback = (\r\n  node: IntersectionObserverHookRootRefCallbackNode,\r\n) => void;\r\n\r\nexport type IntersectionObserverHookResult = [\r\n  IntersectionObserverHookRefCallback,\r\n  {\r\n    entry: IntersectionObserverEntry | undefined;\r\n    rootRef: IntersectionObserverHookRootRefCallback;\r\n  },\r\n];\r\n\r\n// For more info:\r\n// https://developers.google.com/web/updates/2016/04/intersectionobserver\r\n// https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\r\nfunction useIntersectionObserver(\r\n  args?: IntersectionObserverHookArgs,\r\n): IntersectionObserverHookResult {\r\n  const rootMargin = args?.rootMargin ?? DEFAULT_ROOT_MARGIN;\r\n  const threshold = args?.threshold ?? DEFAULT_THRESHOLD;\r\n\r\n  const nodeRef = useRef<IntersectionObserverHookRefCallbackNode>(null);\r\n  const rootRef = useRef<IntersectionObserverHookRootRefCallbackNode>(null);\r\n  const observerRef = useRef<IntersectionObserver | null>(null);\r\n\r\n  const [entry, setEntry] = useState<IntersectionObserverEntry>();\r\n\r\n  const unobserve = useCallback(() => {\r\n    // Disconnect the current observer (if there is one)\r\n    const currentObserver = observerRef.current;\r\n    currentObserver?.disconnect();\r\n    observerRef.current = null;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // We disconnect the observer on unmount to prevent memory leaks etc.\r\n      unobserve();\r\n    };\r\n  }, [unobserve]);\r\n\r\n  const observe = useCallback(() => {\r\n    const node = nodeRef.current;\r\n    if (node) {\r\n      const root = rootRef.current;\r\n      const options = { root, rootMargin, threshold };\r\n      // Create a observer for current \"node\" with given options.\r\n      const observer = new IntersectionObserver(([newEntry]) => {\r\n        setEntry(newEntry);\r\n      }, options);\r\n      observer.observe(node);\r\n      observerRef.current = observer;\r\n    }\r\n  }, [rootMargin, threshold]);\r\n\r\n  const initializeObserver = useCallback(() => {\r\n    unobserve();\r\n    observe();\r\n  }, [observe, unobserve]);\r\n\r\n  const refCallback = useCallback<IntersectionObserverHookRefCallback>(\r\n    (node) => {\r\n      nodeRef.current = node;\r\n      initializeObserver();\r\n    },\r\n    [initializeObserver],\r\n  );\r\n\r\n  const rootRefCallback = useCallback<IntersectionObserverHookRootRefCallback>(\r\n    (rootNode) => {\r\n      rootRef.current = rootNode;\r\n      initializeObserver();\r\n    },\r\n    [initializeObserver],\r\n  );\r\n\r\n  return [refCallback, { entry, rootRef: rootRefCallback }];\r\n}\r\n\r\nexport default useIntersectionObserver;\r\n","import { useEffect, useState } from 'react';\r\nimport useIntersectionObserver, {\r\n  IntersectionObserverHookArgs,\r\n  IntersectionObserverHookResult,\r\n} from './useIntersectionObserver';\r\n\r\nexport type TrackVisibilityHookArgs = IntersectionObserverHookArgs;\r\n\r\nexport type TrackVisibilityHookResult = [\r\n  IntersectionObserverHookResult[0],\r\n  IntersectionObserverHookResult[1] & {\r\n    isVisible: boolean;\r\n    wasEverVisible: boolean;\r\n  },\r\n];\r\n\r\nfunction useTrackVisibility(\r\n  args?: IntersectionObserverHookArgs,\r\n): TrackVisibilityHookResult {\r\n  const [ref, result] = useIntersectionObserver(args);\r\n  const isVisible = Boolean(result.entry?.isIntersecting);\r\n  const [wasEverVisible, setWasEverVisible] = useState(isVisible);\r\n\r\n  useEffect(() => {\r\n    if (isVisible) {\r\n      setWasEverVisible(isVisible);\r\n    }\r\n  }, [isVisible]);\r\n\r\n  return [ref, { ...result, isVisible, wasEverVisible }];\r\n}\r\n\r\nexport default useTrackVisibility;\r\n","import { useEffect } from 'react';\r\nimport {\r\n  useTrackVisibility,\r\n  IntersectionObserverHookArgs,\r\n  IntersectionObserverHookRefCallback,\r\n  IntersectionObserverHookRootRefCallback,\r\n} from 'react-intersection-observer-hook';\r\n\r\nconst DEFAULT_DELAY_IN_MS = 100;\r\n\r\nexport type UseInfiniteScrollHookResult = [\r\n  IntersectionObserverHookRefCallback,\r\n  { rootRef: IntersectionObserverHookRootRefCallback },\r\n];\r\n\r\nexport type UseInfiniteScrollHookArgs = Pick<\r\n  IntersectionObserverHookArgs,\r\n  // We pass this to 'IntersectionObserver'. We can use it to configure when to trigger 'onLoadMore'.\r\n  'rootMargin'\r\n> & {\r\n  // Some sort of \"is fetching\" info of the request.\r\n  loading: boolean;\r\n  // If the list has more items to load.\r\n  hasNextPage: boolean;\r\n  // The callback function to execute when the 'onLoadMore' is triggered.\r\n  // eslint-disable-next-line no-undef\r\n  onLoadMore: VoidFunction;\r\n  // Flag to stop infinite scrolling. Can be used in case of an error etc too.\r\n  disabled?: boolean;\r\n  // How long it should wait before triggering 'onLoadMore'.\r\n  delayInMs?: number;\r\n};\r\n\r\nfunction useInfiniteScroll({\r\n  loading,\r\n  hasNextPage,\r\n  onLoadMore,\r\n  rootMargin,\r\n  disabled,\r\n  delayInMs = DEFAULT_DELAY_IN_MS,\r\n}: UseInfiniteScrollHookArgs): UseInfiniteScrollHookResult {\r\n  const [ref, { rootRef, isVisible }] = useTrackVisibility({\r\n    rootMargin,\r\n  });\r\n\r\n  const shouldLoadMore = !disabled && !loading && isVisible && hasNextPage;\r\n\r\n  // eslint-disable-next-line consistent-return\r\n  useEffect(() => {\r\n    if (shouldLoadMore) {\r\n      // When we trigger 'onLoadMore' and new items are added to the list,\r\n      // right before they become rendered on the screen, 'loading' becomes false\r\n      // and 'isVisible' can be true for a brief time, based on the scroll position.\r\n      // So, it triggers 'onLoadMore' just after the first one is finished.\r\n      // We use a small delay here to prevent this kind of situations.\r\n      // It can be configured by hook args.\r\n      const timer = setTimeout(() => {\r\n        onLoadMore();\r\n      }, delayInMs);\r\n      return () => {\r\n        clearTimeout(timer);\r\n      };\r\n    }\r\n  }, [onLoadMore, shouldLoadMore, delayInMs]);\r\n\r\n  return [ref, { rootRef }];\r\n}\r\n\r\nexport default useInfiniteScroll;\r\n","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useInfiniteQuery } from \"react-query\";\nimport { getList } from \"../../services/anime\";\n\ninterface Props {\n  category: string;\n  slug: string;\n}\n\nconst useBrowseList = (props: Props) => {\n  const fetchList = ({ pageParam = 1 }) =>\n    getList({ ...props, page: pageParam });\n\n  return useInfiniteQuery([\"browse\", props], fetchList, {\n    getNextPageParam: (response) => {\n      if (!response.pagination) {\n        return;\n      }\n\n      const { pagination } = response;\n\n      return pagination.currentPage >= pagination.totalPage\n        ? null\n        : pagination.currentPage + 1;\n    },\n  });\n};\n\nexport default useBrowseList;\n","import React from \"react\";\nimport useInfiniteScroll from \"react-infinite-scroll-hook\";\nimport { useLocation } from \"react-router\";\nimport AnimeCard from \"../../components/AnimeCard\";\nimport Loader from \"../../components/Loader\";\nimport Skeleton from \"../../components/Skeleton\";\nimport { GENRES, RANKINGS } from \"../../constants\";\nimport AnimeCardSkeleton from \"../../skeletons/AnimeCardSkeleton\";\nimport useBrowseList from \"./useBrowseList\";\n\nconst ALL = [...RANKINGS, ...GENRES];\n\nconst BrowseScreen = () => {\n  const { pathname } = useLocation();\n\n  const [category, ...slug] = pathname.replace(\"/\", \"\").split(\"/\");\n\n  const { data, hasNextPage, isLoading, fetchNextPage, isFetchingNextPage } =\n    useBrowseList({ category, slug: slug.join(\"/\") });\n\n  const [sentryRef] = useInfiniteScroll({\n    loading: isFetchingNextPage,\n    hasNextPage: !!hasNextPage,\n    onLoadMore: fetchNextPage,\n    rootMargin: \"0px 0px 100px 0px\",\n  });\n\n  const current = ALL.find((type) => pathname.includes(type.slug));\n\n  const list = data?.pages.map((list) => list.data).flat();\n\n  return (\n    <div className=\"w-full px-2 py-20 lg:px-20 lg:py-24\">\n      <div className=\"w-full p-2\">\n        <div className=\"flex items-center justify-between\">\n          <p className=\"text-white font-bold text-4xl\">{current?.name}</p>\n        </div>\n\n        {isLoading && (\n          <Skeleton className=\"my-12 flex flex-wrap\">\n            {new Array(18).fill(null).map((_, i) => (\n              <AnimeCardSkeleton\n                key={i}\n                className=\"mt-2 w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/5 2xl:w-1/6\"\n              />\n            ))}\n          </Skeleton>\n        )}\n\n        <div className=\"my-12 flex flex-wrap\">\n          {!isLoading &&\n            list?.map((anime) => (\n              <div\n                className=\"mt-2 -mr-2 px-2 w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/5 2xl:w-1/6\"\n                key={anime.slug}\n              >\n                <AnimeCard {...anime} />\n              </div>\n            ))}\n        </div>\n\n        {(isFetchingNextPage || hasNextPage) && (\n          <div ref={sentryRef}>\n            <Loader />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default BrowseScreen;\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}"],"sourceRoot":""}