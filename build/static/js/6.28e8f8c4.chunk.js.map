{"version":3,"sources":["utils/Storage.ts","components/Button.tsx","pages/InfoScreen/useFetchInfo.ts","hooks/useQueryParams.ts","components/Disclosure.tsx","components/Episode.tsx","components/EpisodeChunk.tsx","hooks/useDevice.ts","hooks/useOrientiation.ts","pages/WatchScreen/EpisodesButton.tsx","pages/WatchScreen/useFetchSource.ts","components/Portal.tsx","pages/WatchScreen/Video/Controls.tsx","pages/WatchScreen/Video/NextEpisodeButton.tsx","pages/WatchScreen/Video/Overlay.tsx","pages/WatchScreen/Video/methods.tsx","pages/WatchScreen/Video/index.tsx","pages/WatchScreen/index.tsx"],"names":["Storage","localStorage","clear","storageKey","filter","rawList","getItem","list","JSON","parse","setItem","stringify","item","compareTwoObject","value","push","parsedList","isObjectEmpty","find","this","remove","findOne","updatedItem","create","obj","obj1","obj2","isComparedCount","entries","Object","key","length","ButtonRaw","props","className","iconSize","iconClassName","StartIcon","startIcon","EndIcon","endIcon","buttonProps","classNames","size","children","Button","onClick","to","useFetchInfo","slug","useQuery","getInfo","useQueryParams","location","useLocation","URLSearchParams","search","Disclosure","defaultOpen","as","open","buttonClassName","button","Panel","panelClassName","static","Episode","name","Image","src","thumbnail_medium","full_name","numberWithCommas","views","active","EpisodeChunkButton","title","EpisodeChunk","episodes","map","episode","index","activeName","episodeOnClick","useDevice","useState","window","screen","width","setWidth","handleWindowSizeChange","useEffect","addEventListener","removeEventListener","isMobile","isDesktop","isOrientationMobile","orientation","ORIENTATION","useOrientation","setOrientation","findOrientation","matchMedia","matches","isLandscape","isPortrait","EpisodesButton","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Items","chunk","i","activeIndex","firstEpisode","lastEpisode","activeEpisode","isOpen","some","useFetchSource","animeId","episodeIndex","enabled","getSource","Portal","element","ReactDOM","createPortal","RewindButton","aria-hidden","focusable","xlinkHref","ForwardButton","PlayButton","playing","PlyrControls","player","isPlaying","setIsPlaying","on","defaultPlayButton","document","querySelector","style","display","seekTime","config","handleRewind","useCallback","rewind","handleForward","forward","handlePlay","pause","play","NextEpisodeButton","showNextEpisodeButton","setShowNextEpisodeButton","remainingTime","Math","round","duration","currentTime","Overlay","nextEpisodeClick","show","setShow","addButton","component","id","position","existingButton","controls","div","createElement","controlsChildNodes","childNodes","insertBefore","render","isListening","Plyr","options","source","onReady","onSourceChange","rest","videoSource","sources","setPlayer","container","setContainer","innerRef","useRef","hls","Hls","videoOptions","quality","default","createPlayer","plyrPlayer","PlyrJS","includes","event","lock","current","Events","MANIFEST_LOADED","levels","height","level","forced","onChange","forEach","levelIndex","currentLevel","footer","classList","add","isSupported","loadSource","attachMedia","startLoad","plyr","destroy","ref","displayName","defaultProps","iconPrefix","iconUrl","i18n","restart","fastForward","seek","seekLabel","played","buffered","volume","mute","unmute","enableCaptions","disableCaptions","download","enterFullscreen","exitFullscreen","frameTitle","captions","settings","menuBack","speed","normal","loop","autoplay","React","memo","prevProps","nextProps","WatchScreen","useParams","query","navigate","useNavigate","showPauseScreen","setShowPauseScreen","showOrientationScreen","setShowOrientationScreen","Number","get","setEpisodeIndex","debounce","info","data","isInfoLoading","isLoading","isSourceLoading","handleEpisodeClick","_episode","replace","Loader","type","clearTimeout","visibilityState","setTimeout","timeoutSeconds","thumbnail","update","time","alt","onMouseEnter","description"],"mappings":"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","file":"static/js/6.28e8f8c4.chunk.js","sourcesContent":["class Storage {\n  static clear() {\n    localStorage.clear();\n  }\n\n  static remove(storageKey: string, filter: object) {\n    const rawList = localStorage.getItem(storageKey);\n\n    if (!rawList) return;\n\n    const list: object[] = JSON.parse(rawList);\n\n    // Filter out the item we wanna remove\n    localStorage.setItem(\n      storageKey,\n      JSON.stringify(list.filter((item) => !compareTwoObject(item, filter)))\n    );\n  }\n\n  static create(storageKey: string, value: object) {\n    const rawList = localStorage.getItem(storageKey);\n\n    if (!rawList) {\n      return localStorage.setItem(\n        storageKey,\n        JSON.stringify([value]) // Save value in array\n      );\n    }\n\n    const list = JSON.parse(rawList);\n\n    list.push(value);\n\n    localStorage.setItem(storageKey, JSON.stringify(list));\n  }\n\n  static findOne<T extends {}>(storageKey: string, filter = {}): T | undefined {\n    const rawList = localStorage.getItem(storageKey);\n\n    if (!rawList) return undefined;\n\n    const parsedList: T[] = JSON.parse(rawList);\n\n    if (isObjectEmpty(filter)) {\n      return parsedList[0];\n    }\n\n    return parsedList.find((item) => compareTwoObject(item, filter));\n  }\n\n  static find<T>(storageKey: string, filter = {}): T[] | [] {\n    const rawList = localStorage.getItem(storageKey);\n\n    if (!rawList) return [];\n\n    const parsedList: T[] = JSON.parse(rawList);\n\n    if (isObjectEmpty(filter)) {\n      return parsedList;\n    }\n\n    return parsedList.filter((item) => compareTwoObject(item, filter));\n  }\n\n  static update(storageKey: string, filter: object, value: object) {\n    this.remove(storageKey, filter);\n\n    const item = this.findOne(storageKey, filter);\n\n    const updatedItem = { ...item, ...value };\n\n    return this.create(storageKey, updatedItem);\n  }\n\n  static has(storageKey: string, filter: object) {\n    const item = this.findOne(storageKey, filter);\n\n    if (!item) return false;\n\n    return !isObjectEmpty(item);\n  }\n}\n\nconst isObjectEmpty = (obj: object) => JSON.stringify(obj) === \"{}\";\n\n// check if object one contains all property and value of object two.\nconst compareTwoObject = <T, U extends keyof T>(obj1: T, obj2: T) => {\n  let isComparedCount = 0;\n\n  const entries = Object.entries(obj2);\n\n  for (const [key, value] of entries) {\n    if (obj1[key as U] === value) {\n      isComparedCount++;\n    }\n  }\n\n  return isComparedCount === entries.length;\n};\n\nexport default Storage;\n","import classNames from \"classnames\";\nimport { To } from \"history\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Icon } from \"../types\";\n\ninterface ButtonRawProps extends React.HTMLAttributes<HTMLButtonElement> {\n  startIcon?: React.ComponentType<Icon>;\n  endIcon?: React.ComponentType<Icon>;\n  iconSize?: number;\n  iconClassName?: string;\n}\n\ninterface ButtonProps extends ButtonRawProps {\n  onClick?: () => void;\n  to?: To;\n}\n\nconst ButtonRaw = (props: ButtonRawProps) => {\n  const {\n    className,\n    iconSize = 16,\n    iconClassName,\n    startIcon: StartIcon,\n    endIcon: EndIcon,\n\n    ...buttonProps\n  } = props;\n  return (\n    <button\n      className={classNames(\n        \"flex items-center px-4 py-2 rounded-md font-medium text-xs md:text-sm lg:text-base hover:bg-opacity-80\",\n        className\n      )}\n      {...buttonProps}\n    >\n      {StartIcon && (\n        <StartIcon\n          size={iconSize}\n          className={classNames(\"mr-2\", iconClassName)}\n        />\n      )}\n      {props.children}\n\n      {EndIcon && (\n        <EndIcon\n          size={iconSize}\n          className={classNames(\"ml-2\", iconClassName)}\n        />\n      )}\n    </button>\n  );\n};\n\nconst Button = (props: ButtonProps) => {\n  const { onClick, to, ...buttonProps } = props;\n\n  return to ? (\n    <Link to={to}>\n      <ButtonRaw {...buttonProps} />\n    </Link>\n  ) : (\n    <ButtonRaw {...buttonProps} onClick={onClick} />\n  );\n};\n\nexport default Button;\n","import { useQuery } from \"react-query\";\nimport { getInfo } from \"../../services/anime\";\n\nconst useFetchInfo = (slug: string) => {\n  return useQuery([\"info\", slug], () => getInfo(slug));\n};\n\nexport default useFetchInfo;\n","import { useLocation } from \"react-router\";\n\nconst useQueryParams = () => {\n  const location = useLocation();\n\n  const params = new URLSearchParams(location.search);\n\n  return params;\n};\n\nexport default useQueryParams;\n","import { Disclosure as HeadlessDisclosure } from \"@headlessui/react\";\nimport classNames from \"classnames\";\nimport React, { PropsWithChildren } from \"react\";\n\ninterface DisclosureProps {\n  button: JSX.Element;\n  className?: string;\n  panelClassName?: string;\n  buttonClassName?: string;\n  defaultOpen?: boolean;\n}\n\nconst Disclosure = (props: PropsWithChildren<DisclosureProps>) => {\n  return (\n    <HeadlessDisclosure\n      defaultOpen={props.defaultOpen}\n      as=\"div\"\n      className={classNames(props.className)}\n    >\n      {({ open }) => (\n        <>\n          <HeadlessDisclosure.Button\n            className={classNames(\"block\", props.buttonClassName)}\n          >\n            {props.button}\n          </HeadlessDisclosure.Button>\n\n          <HeadlessDisclosure.Panel\n            className={classNames(props.panelClassName, !open && \"hidden\")}\n            static\n          >\n            {props.children}\n          </HeadlessDisclosure.Panel>\n        </>\n      )}\n    </HeadlessDisclosure>\n  );\n};\n\nexport default Disclosure;\n","import React from \"react\";\nimport { Episode as EpisodeType } from \"../types\";\nimport { numberWithCommas } from \"../utils\";\nimport Image from \"./Image\";\n\ninterface EpisodeProps extends EpisodeType {\n  active?: boolean;\n  onClick?: () => void;\n}\n\nconst Episode = (props: EpisodeProps) => {\n  return (\n    <div\n      onClick={props.onClick}\n      className=\"border-gray-400 border-b p-4 rounded-md rounded-b-none flex items-center hover:bg-gray-600 cursor-pointer hover:bg-opacity-50\"\n    >\n      <p className=\"text-gray-300 text-lg font-bold w-6 md:w-12\">\n        {props.name}\n      </p>\n\n      <Image\n        className=\"h-20 max-w-36 w-1/2 object-cover mr-2 md:mr-6\"\n        src={props.thumbnail_medium}\n      />\n\n      <div className=\"flex-1 space-y-2\">\n        <div className=\"space-y-1 text-left\">\n          <p className=\"text-white text-lg font-medium line-clamp-1\">\n            {props.full_name}\n          </p>\n          <p className=\"text-gray-500 text-base font-medium\">\n            Lượt xem: {numberWithCommas(props.views)}\n          </p>\n        </div>\n        {props.active && (\n          <div className=\"rounded-md bg-primary px-2 py-1 w-max\">Đang xem</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Episode;\n","import classNames from \"classnames\";\nimport React from \"react\";\nimport { BsChevronDown } from \"react-icons/bs\";\nimport { Episode as EpisodeType } from \"../types\";\nimport Disclosure from \"./Disclosure\";\nimport Episode from \"./Episode\";\n\ninterface EpisodeChunkButtonProps {\n  title: string;\n}\n\nconst EpisodeChunkButton: React.FC<EpisodeChunkButtonProps> = (props) => {\n  return (\n    <div className=\"w-full flex items-center justify-between py-2 px-4\">\n      <p className=\"text-white text-xl\">{props.title}</p>\n\n      <BsChevronDown className=\"w-6 h-6 text-white\" />\n    </div>\n  );\n};\n\ninterface EpisodeChunkProps {\n  episodes: EpisodeType[];\n  title: string;\n  className?: string;\n  buttonClassName?: string;\n  activeName?: number;\n  episodeOnClick?: (episode: EpisodeType, index: number) => void;\n  open?: boolean;\n}\n\nconst EpisodeChunk: React.FC<EpisodeChunkProps> = (props) => {\n  return (\n    <Disclosure\n      className={classNames(props.className)}\n      buttonClassName={classNames(\"w-full rounded-md\", props.buttonClassName)}\n      button={<EpisodeChunkButton title={props.title} />}\n      defaultOpen={props.open}\n    >\n      {props.episodes.map((episode, index) => (\n        <Episode\n          {...episode}\n          key={episode.slug}\n          active={props.activeName === episode.name}\n          onClick={() => props?.episodeOnClick?.(episode, episode.name - 1)}\n        />\n      ))}\n    </Disclosure>\n  );\n};\n\nexport default EpisodeChunk;\n","/* eslint-disable no-useless-escape */\nimport { useEffect, useState } from \"react\";\n\nconst useDevice = () => {\n  const [width, setWidth] = useState<number>(window.screen.width);\n\n  function handleWindowSizeChange() {\n    setWidth(window.screen.width);\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleWindowSizeChange);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleWindowSizeChange);\n    };\n  }, []);\n\n  const isMobile = width <= 768;\n  const isDesktop = width > 768;\n  // If device has orientation, then it is mobile\n  const isOrientationMobile = typeof window.orientation !== \"undefined\";\n\n  return { isMobile, isDesktop, isOrientationMobile };\n};\n\nexport default useDevice;\n","import { useEffect, useState } from \"react\";\n\nconst ORIENTATION = {\n  landscape: \"LANDSCAPE\",\n  portrait: \"portrait\",\n};\n\nconst useOrientation = () => {\n  const [orientation, setOrientation] = useState(ORIENTATION.portrait);\n\n  useEffect(() => {\n    const findOrientation = () => {\n      if (window.matchMedia(\"(orientation: portrait)\").matches) {\n        setOrientation(ORIENTATION.portrait);\n      }\n\n      if (window.matchMedia(\"(orientation: landscape)\").matches) {\n        setOrientation(ORIENTATION.landscape);\n      }\n    };\n\n    window.addEventListener(\"resize\", findOrientation);\n\n    findOrientation();\n\n    return () => {\n      window.removeEventListener(\"resize\", findOrientation);\n    };\n  }, []);\n\n  return {\n    isLandscape: orientation === ORIENTATION.landscape,\n    isPortrait: orientation === ORIENTATION.portrait,\n  };\n};\n\nexport default useOrientation;\n","import { Menu, Transition } from \"@headlessui/react\";\nimport React, { Fragment } from \"react\";\nimport { ImStack } from \"react-icons/im\";\nimport EpisodeChunk from \"../../components/EpisodeChunk\";\nimport { Episode as EpisodeType } from \"../../types\";\nimport { chunk } from \"../../utils\";\n\ninterface EpisodesButtonProps {\n  episodes: EpisodeType[];\n  onClick?: (\n    episode: EpisodesButtonProps[\"episodes\"][number],\n    index: number\n  ) => void;\n  activeIndex?: number;\n}\n\nconst EpisodesButton = (props: EpisodesButtonProps) => {\n  return (\n    <Menu>\n      <Menu.Button>\n        <ImStack size={18} />\n      </Menu.Button>\n      <Transition\n        as={Fragment}\n        enter=\"transition ease-out duration-100\"\n        enterFrom=\"transform opacity-0 scale-95\"\n        enterTo=\"transform opacity-100 scale-100\"\n        leave=\"transition ease-in duration-75\"\n        leaveFrom=\"transform opacity-100 scale-100\"\n        leaveTo=\"transform opacity-0 scale-95\"\n      >\n        <Menu.Items className=\"no-tap-highlight rounded-md text-white overflow-y-scroll absolute space-y-2 right-0 bottom-full p-6 h-96 w-32rem mt-2 origin-top-right bg-background shadow-lg focus:outline-none\">\n          <div className=\"w-full space-y-2\">\n            {chunk<EpisodeType>(props?.episodes!, 18).map((chunk, i) => {\n              const { activeIndex } = props;\n\n              const firstEpisode = chunk[0];\n              const lastEpisode = chunk[chunk.length - 1];\n              const activeEpisode = props.episodes[activeIndex!];\n\n              const isOpen = chunk.some(\n                (episode) => episode.name - 1 === activeIndex\n              );\n\n              return (\n                <EpisodeChunk\n                  buttonClassName=\"episode-buttons bg-background-darker\"\n                  title={`Tập ${firstEpisode.name} - Tập ${lastEpisode.name}`}\n                  episodes={chunk}\n                  key={i}\n                  activeName={activeEpisode.name}\n                  episodeOnClick={props.onClick}\n                  open={!!isOpen}\n                />\n              );\n            })}\n          </div>\n        </Menu.Items>\n      </Transition>\n    </Menu>\n  );\n};\n\nexport default EpisodesButton;\n","import { useQuery } from \"react-query\";\nimport { getSource } from \"../../services/anime\";\nimport { Source } from \"../../types\";\n\nconst useFetchSource = (\n  animeId: number,\n  episodeIndex: number,\n  enabled?: boolean\n) => {\n  return useQuery<Source>(\n    [\"source\", { animeId, episodeIndex }],\n    () => getSource(animeId, episodeIndex),\n    { enabled }\n  );\n};\n\nexport default useFetchSource;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\ninterface PortalProps {\n  element: Element;\n}\n\nconst Portal: React.FC<PortalProps> = ({ children, element }) => {\n  return ReactDOM.createPortal(children, element);\n};\n\nexport default Portal;\n","import classNames from \"classnames\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { BsFillPlayFill, BsPause } from \"react-icons/bs\";\nimport { PlyrInstance } from \".\";\nimport useDevice from \"../../../hooks/useDevice\";\n\ninterface ButtonProps {\n  onClick?: () => void;\n}\n\nconst RewindButton = (props: ButtonProps) => (\n  <svg\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    className=\"text-gray-300 hover:text-white w-8 h-8 cursor-pointer\"\n    onClick={props.onClick}\n  >\n    <use xlinkHref=\"/plyr.svg#plyr-rewind\"></use>\n  </svg>\n);\n\nconst ForwardButton = (props: ButtonProps) => (\n  <svg\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    className=\"text-gray-300 hover:text-white w-8 h-8 cursor-pointer\"\n    onClick={props.onClick}\n  >\n    <use xlinkHref=\"/plyr.svg#plyr-fast-forward\"></use>\n  </svg>\n);\n\nconst PlayButton = (props: ButtonProps & { playing: boolean }) => {\n  return !props.playing ? (\n    <BsFillPlayFill\n      className=\"text-gray-300 hover:text-white w-16 h-16 cursor-pointer\"\n      onClick={props.onClick}\n    />\n  ) : (\n    <BsPause\n      className=\"cursor-pointer text-gray-300 hover:text-white w-16 h-16\"\n      onClick={props.onClick}\n    />\n  );\n};\n\nexport interface PlyrControlsProps {\n  player: PlyrInstance;\n}\n\nconst PlyrControls: React.FC<PlyrControlsProps> = ({ player }) => {\n  const [isPlaying, setIsPlaying] = useState<boolean>(false);\n  const { isOrientationMobile } = useDevice();\n\n  player.on(\"play\", () => {\n    setIsPlaying(true);\n  });\n\n  player.on(\"pause\", () => {\n    setIsPlaying(false);\n  });\n\n  useEffect(() => {\n    const defaultPlayButton = document.querySelector<HTMLElement>(\n      \".plyr__control--overlaid\"\n    );\n\n    if (defaultPlayButton) {\n      if (isOrientationMobile) {\n        defaultPlayButton.style.display = \"none\";\n      }\n    }\n  }, [isOrientationMobile]);\n  // @ts-ignore\n  const { seekTime } = player.config;\n\n  const handleRewind = useCallback(() => {\n    player.rewind(seekTime);\n  }, [player, seekTime]);\n\n  const handleForward = useCallback(() => {\n    player.forward(seekTime);\n  }, [player, seekTime]);\n\n  const handlePlay = useCallback(() => {\n    const { playing } = player;\n\n    if (playing) {\n      player.pause();\n    } else {\n      player.play();\n    }\n  }, [player]);\n\n  return (\n    <div\n      className={classNames(\n        \"text-white flex items-center justify-evenly absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-11/12\",\n        !isOrientationMobile && \"hidden\"\n      )}\n    >\n      <RewindButton onClick={handleRewind} />\n      <PlayButton playing={isPlaying} onClick={handlePlay} />\n      <ForwardButton onClick={handleForward} />\n    </div>\n  );\n};\n\nexport default PlyrControls;\n","import classNames from \"classnames\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { BsFillPlayFill } from \"react-icons/bs\";\nimport { PlyrInstance } from \".\";\n\ninterface Props {\n  player: PlyrInstance;\n  onClick?: () => void;\n}\n\nconst NextEpisodeButton: React.FC<Props> = ({ player, onClick }) => {\n  const [showNextEpisodeButton, setShowNextEpisodeButton] = useState(false);\n\n  useEffect(() => {\n    player.on(\"timeupdate\", () => {\n      const remainingTime = Math.round(player.duration - player.currentTime);\n      const triggerTime = 120; // Seconds\n\n      if (remainingTime <= triggerTime) {\n        setShowNextEpisodeButton(true);\n      } else {\n        setShowNextEpisodeButton(false);\n      }\n    });\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div\n      className={classNames(\n        \"z-1 absolute right-10 bottom-20 transition duration-300\",\n        !showNextEpisodeButton ? \"opacity-0 invisible\" : \"opacity-100 visible\"\n      )}\n    >\n      <button\n        className={classNames(\n          \"rounded-md flex items-center bg-white hover:bg-gray-300 px-4 py-2 space-x-2\"\n        )}\n        onClick={onClick}\n      >\n        <BsFillPlayFill size={30} />\n        <p>Tập tiếp theo</p>\n      </button>\n    </div>\n  );\n};\n\nexport default NextEpisodeButton;\n","import classNames from \"classnames\";\nimport React, { useState } from \"react\";\nimport { PlyrInstance } from \".\";\nimport useDevice from \"../../../hooks/useDevice\";\nimport PlyrControls from \"./Controls\";\nimport NextEpisodeButton from \"./NextEpisodeButton\";\n\ninterface OverlayProps {\n  player: PlyrInstance;\n  nextEpisodeClick?: () => void;\n}\n\nconst Overlay: React.FC<OverlayProps> = ({\n  player,\n  children,\n  nextEpisodeClick,\n}) => {\n  const [show, setShow] = useState<boolean>(true);\n  const { isOrientationMobile } = useDevice();\n\n  player.on(\"controlsshown\", () => {\n    setShow(true);\n  });\n\n  player.on(\"controlshidden\", () => {\n    setShow(false);\n  });\n\n  return (\n    <>\n      <div\n        className={classNames(\n          \"plyr--overlay transition duration-300 z-1\",\n          show ? \"opacity-100\" : \"opacity-0\"\n        )}\n      >\n        {/* Background Overlay */}\n        <div\n          className={classNames(\n            \"absolute left-0 top-0 h-full w-full bg-black bg-opacity-70 transition duration-300\",\n            !isOrientationMobile && \"hidden\"\n          )}\n        />\n\n        <PlyrControls player={player} />\n\n        {children}\n      </div>\n      <NextEpisodeButton player={player} onClick={nextEpisodeClick} />\n    </>\n  );\n};\n\nexport default Overlay;\n","import classNames from \"classnames\";\nimport ReactDOM from \"react-dom\";\n\ninterface Button {\n  component: JSX.Element;\n  position: number;\n  id: string;\n  className?: string;\n}\n\nexport const addButtons = (buttons: Button[]) => {\n  buttons.forEach((button) => {\n    addButton(button);\n  });\n};\n\nexport const addButton = (button: Button) => {\n  const { component, id, position, className } = button;\n\n  // Remove existing button if it exists.\n  const existingButton = document.querySelector(`.plyr_buttons--${id}`);\n  existingButton?.remove();\n\n  const controls = document.querySelector(\".plyr__controls\");\n  const div = document.createElement(\"div\");\n  div.className = classNames(\n    \"plyr__controls__item plyr__control\",\n    `plyr_buttons--${id}`,\n    className\n  );\n\n  const controlsChildNodes = controls?.childNodes;\n\n  if (controlsChildNodes) {\n    controls?.insertBefore(\n      div,\n      position < 0\n        ? controlsChildNodes[controlsChildNodes?.length! - 1]\n        : controlsChildNodes[position - 1]\n    );\n\n    ReactDOM.render(component, div);\n  }\n};\n","/* eslint-disable react/self-closing-comp */\nimport Hls from \"hls.js\";\nimport PlyrJS, { Options, PlyrEvent as PlyrJSEvent, SourceInfo } from \"plyr\";\nimport \"plyr/dist/plyr.css\";\nimport PropTypes from \"prop-types\";\nimport React, {\n  HTMLProps,\n  MutableRefObject,\n  PropsWithChildren,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport Portal from \"../../../components/Portal\";\nimport Overlay from \"./Overlay\";\nimport \"./Video.css\";\nexport { addButtons } from \"./methods\";\n\nexport type PlyrInstance = PlyrJS;\nexport type PlyrEvent = PlyrJSEvent;\nexport type PlyrCallback = (this: PlyrJS, event: PlyrEvent) => void;\n\nexport type PlyrControlButton = string | JSX.Element;\n\nexport type PlyrProps = HTMLProps<HTMLVideoElement> & {\n  source?: SourceInfo;\n  options?: Options;\n  onReady?: (player: PlyrJS, event: PlyrJS.PlyrEvent) => void;\n  onSourceChange?: (player: PlyrJS) => void;\n  nextEpisodeClick?: () => void;\n};\n\nexport interface HTMLPlyrVideoElement extends HTMLVideoElement {\n  plyr?: PlyrInstance;\n}\n\nlet isListening = false;\n\nconst Plyr: React.FC<PropsWithChildren<PlyrProps>> = (props) => {\n  const {\n    options = null,\n    source,\n    onReady,\n    onSourceChange,\n    children,\n    nextEpisodeClick,\n    ...rest\n  } = props;\n  const videoSource = source?.sources[0].src!;\n  const [player, setPlayer] = useState<PlyrInstance | undefined>();\n  const [container, setContainer] = useState<Element | null>();\n\n  const innerRef = useRef<HTMLPlyrVideoElement>();\n  const hls = useRef(new Hls());\n\n  const videoOptions: PlyrJS.Options = {\n    ...options,\n    quality: {\n      default: 720,\n      options: [720],\n    },\n  };\n\n  const createPlayer = () => {\n    const plyrPlayer = new PlyrJS(\".plyr-react\", videoOptions);\n    isListening = false;\n\n    if (!videoSource.includes(\"m3u8\")) {\n      plyrPlayer.source = source!;\n    }\n\n    plyrPlayer.on(\"ready\", (event) => {\n      setPlayer(plyrPlayer);\n\n      if (isListening) return;\n\n      isListening = true;\n\n      onReady?.(plyrPlayer, event);\n\n      setContainer(document.querySelector(\".plyr--video\"));\n    });\n\n    plyrPlayer.on(\"enterfullscreen\", () => {\n     window.screen.orientation.lock(\"landscape\")\n    });\n  };\n\n  hls.current.on(Hls.Events.MANIFEST_LOADED, () => {\n    videoOptions.quality = {\n      default: hls.current.levels[hls.current.levels.length - 1].height,\n      options: hls.current.levels.map((level) => level.height),\n      forced: true,\n      // Manage quality changes\n      onChange: (quality: number) => {\n        hls.current.levels.forEach((level, levelIndex) => {\n          if (level.height === quality) {\n            hls.current.currentLevel = levelIndex;\n          }\n        });\n      },\n    };\n\n    createPlayer();\n  });\n\n  // Remove footer\n  useEffect(() => {\n    const footer = document.querySelector(\"footer\");\n\n    footer?.classList.add(\"hidden\");\n\n    return () => {\n      footer?.classList.remove(\"hidden\");\n    };\n  }, []);\n\n  useEffect(() => {\n    onSourceChange?.(player!);\n  }, [player, onSourceChange]);\n\n  useEffect(() => {\n    if (!innerRef.current) return;\n\n    if (videoSource.includes(\"m3u8\") && Hls.isSupported()) {\n      hls.current.loadSource(videoSource);\n      hls.current.attachMedia(innerRef.current as HTMLMediaElement);\n\n      player?.on(\"play\", () => hls.current.startLoad());\n\n      player?.on(\"qualitychange\", () => {\n        if (innerRef.current?.plyr?.currentTime !== 0) {\n          hls.current.startLoad();\n        }\n      });\n    } else {\n      createPlayer();\n    }\n\n    return () => player?.destroy();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [videoSource]);\n\n  return (\n    <>\n      <video\n        ref={innerRef as unknown as MutableRefObject<HTMLVideoElement>}\n        className=\"plyr-react plyr\"\n        {...rest}\n      />\n      {container && (\n        <Portal element={container}>\n          <Overlay nextEpisodeClick={nextEpisodeClick} player={player!}>\n            {children}\n          </Overlay>\n        </Portal>\n      )}\n    </>\n  );\n};\n\nPlyr.displayName = \"Plyr\";\n\nPlyr.defaultProps = {\n  options: {\n    iconPrefix: \"plyr\",\n    iconUrl: \"/plyr.svg\",\n    i18n: {\n      restart: \"Xem lại\",\n      rewind: \"Lùi {seektime} giây\",\n      play: \"Xem\",\n      pause: \"Dừng\",\n      fastForward: \"Tiến {seektime} giây\",\n      seek: \"Tua\",\n      seekLabel: \"{currentTime} / {duration}\",\n      played: \"Đã chạy\",\n      buffered: \"Đã load\",\n      currentTime: \"Thời gian hiện tại\",\n      duration: \"Thời lượng\",\n      volume: \"Âm lượng\",\n      mute: \"Tắt âm lượng\",\n      unmute: \"Mở âm lượng\",\n      enableCaptions: \"Mở phụ đề\",\n      disableCaptions: \"Tắt phụ đề\",\n      download: \"Tải xuống\",\n      enterFullscreen: \"Mở toàn màn hình\",\n      exitFullscreen: \"Thoát toàn màn hình\",\n      frameTitle: \"Video {title}\",\n      captions: \"Phụ đề\",\n      settings: \"Cài đặt\",\n      menuBack: \"Trở về menu\",\n      speed: \"Tốc độ\",\n      normal: \"Bình thường\",\n      quality: \"Chất lượng video\",\n      loop: \"Lặp\",\n    },\n    controls: [\n      \"play-large\",\n      \"play\",\n      \"rewind\",\n      \"fast-forward\",\n      \"progress\",\n      \"current-time\",\n      \"mute\",\n      \"volume\",\n      \"settings\",\n      \"fullscreen\",\n    ],\n    autoplay: true,\n  },\n};\n\nPlyr.propTypes = {\n  options: PropTypes.object,\n  source: PropTypes.any,\n};\n\nexport default React.memo(\n  Plyr,\n  (prevProps: PlyrProps, nextProps: PlyrProps) => {\n    return (\n      prevProps.source?.sources[0].src === nextProps.source?.sources[0].src\n    );\n  }\n);\n","import classNames from \"classnames\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { HiArrowNarrowLeft } from \"react-icons/hi\";\nimport { useNavigate, useParams } from \"react-router\";\nimport Button from \"../../components/Button\";\nimport Image from \"../../components/Image\";\nimport Loader from \"../../components/Loader\";\nimport useDevice from \"../../hooks/useDevice\";\nimport useOrientation from \"../../hooks/useOrientiation\";\nimport useQueryParams from \"../../hooks/useQueryParams\";\nimport { Episode } from \"../../types\";\nimport Storage from \"../../utils/Storage\";\nimport useFetchInfo from \"../InfoScreen/useFetchInfo\";\nimport EpisodesButton from \"./EpisodesButton\";\nimport useFetchSource from \"./useFetchSource\";\nimport Video, { addButtons, PlyrInstance } from \"./Video\";\n\nconst WatchScreen = () => {\n  const { slug } = useParams();\n  const query = useQueryParams();\n  const navigate = useNavigate();\n  const { isDesktop, isOrientationMobile } = useDevice();\n  const { isPortrait } = useOrientation();\n\n  const [showPauseScreen, setShowPauseScreen] = useState(false);\n  const [showOrientationScreen, setShowOrientationScreen] = useState(false);\n  const [episodeIndex, setEpisodeIndex] = useState(\n    Number(query.get(\"episode_index\")) || 0\n  );\n  const debounce = useRef<NodeJS.Timeout | null>(null);\n\n  const { data: info, isLoading: isInfoLoading } = useFetchInfo(slug);\n\n  const { data: source, isLoading: isSourceLoading } = useFetchSource(\n    info?.id!,\n    episodeIndex,\n    !!info\n  );\n\n  const handleEpisodeClick = (_episode: Episode, i: number) => {\n    navigate(`/watch/${slug}?episode_index=${i}`, { replace: true });\n    setEpisodeIndex(i);\n  };\n\n  const handleNextEpisodeClick = () => {\n    setEpisodeIndex((i) => i + 1);\n  };\n\n  const handleSourceChange = () => {\n    const { episodes, thumbnail, ...rest } = info!;\n\n    Storage.update(\n      \"recent\",\n      { id: info?.id },\n      {\n        ...rest,\n        thumbnail: source?.thumbnail_medium,\n        episodeIndex,\n        time: episodes[episodeIndex].full_name,\n      }\n    );\n\n    addButtons([\n      {\n        component: (\n          <EpisodesButton\n            episodes={info?.episodes!}\n            onClick={handleEpisodeClick}\n            activeIndex={episodeIndex}\n          />\n        ),\n        id: \"episodes-button\",\n        position: 6,\n        className: \"flex items-center justify-center\",\n      },\n    ]);\n  };\n\n  const handleReady = (player: PlyrInstance) => {\n    if (isDesktop) {\n      document.addEventListener(\"visibilitychange\", () => {\n        if (debounce.current) {\n          clearTimeout(debounce.current);\n        }\n\n        if (document.visibilityState === \"visible\") {\n          return;\n        }\n\n        const timeoutSeconds = 6;\n\n        debounce.current = setTimeout(\n          () => setShowPauseScreen(true),\n          timeoutSeconds * 1000\n        );\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (isPortrait) {\n      setShowOrientationScreen(true);\n    } else {\n      setShowOrientationScreen(false);\n    }\n  }, [isPortrait]);\n\n  if (isInfoLoading || isSourceLoading) {\n    return (\n      <div className=\"absolute flex items-center justify-center bg-background inset-0 w-screen h-screen z-50\">\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"fixed scrollbar-hide bg-background inset-0 w-screen h-screen z-50\">\n      <div className=\"relative w-full h-full\">\n        <Video\n          source={{\n            type: \"video\",\n            sources: [\n              {\n                src: source?.videoSource!,\n              },\n            ],\n          }}\n          onReady={handleReady}\n          onSourceChange={handleSourceChange}\n          nextEpisodeClick={handleNextEpisodeClick}\n        >\n          <div className=\"absolute top-8 left-8\">\n            <HiArrowNarrowLeft\n              size={30}\n              className=\"text-gray-300 hover:text-white cursor-pointer\"\n              onClick={() => navigate(-1)}\n            />\n          </div>\n        </Video>\n\n        <div\n          className={classNames(\n            \"absolute inset-0 bg-black bg-opacity-90 flex flex-col items-center justify-center\",\n            !showOrientationScreen ? \"hidden\" : \"block\"\n          )}\n        >\n          <Image\n            src=\"/rotate_landscape.gif\"\n            alt=\"Please rotate your device to landscape\"\n          />\n\n          <h1 className=\"text-center text-white text-xs sm:text-sm font-medium\">\n            Chuyển sang chế độ ngang để có trải nghiệm tốt nhất.\n          </h1>\n\n          <Button\n            className=\"text-white my-4 bg-primary\"\n            onClick={() => setShowOrientationScreen(false)}\n          >\n            Đóng\n          </Button>\n        </div>\n\n        <div\n          className={classNames(\n            \"absolute inset-0 bg-black bg-opacity-90 px-40 flex flex-col space-y-6 justify-center\",\n            !showPauseScreen || isOrientationMobile ? \"hidden\" : \"block\"\n          )}\n          onMouseEnter={() => {\n            if (isDesktop && showPauseScreen) {\n              setShowPauseScreen(false);\n            }\n          }}\n        >\n          <div className=\"space-y-2\">\n            <h1 className=\"text-gray-400 font-medium text-lg\">Bạn đang xem</h1>\n            <h1 className=\"text-white font-bold text-5xl\">{info?.name}</h1>\n            <h1 className=\"text-white font-bold text-2xl\">\n              {source?.full_name}\n            </h1>\n          </div>\n\n          <h1 className=\"text-gray-500 text-base font-medium line-clamp-3\">\n            {info?.description}\n          </h1>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WatchScreen;\n"],"sourceRoot":""}