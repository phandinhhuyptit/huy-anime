{"version":3,"sources":["utils/Storage.ts","skeletons/AnimeCardSkeleton.tsx","components/AnimeCard.tsx","components/Carousel.tsx","components/AnimeCarousel/index.tsx","hooks/useFetchList.ts","pages/HomePage/Section.tsx","components/TextIcon.tsx","pages/HomePage/Slide.tsx","pages/HomePage/useFetchSlide.ts","pages/HomePage/SlideCarousel.tsx","pages/HomePage/index.tsx"],"names":["Storage","localStorage","clear","storageKey","filter","rawList","getItem","list","JSON","parse","setItem","stringify","item","compareTwoObject","value","push","parsedList","isObjectEmpty","find","this","remove","findOne","updatedItem","create","obj","obj1","obj2","isComparedCount","entries","Object","key","length","AnimeCardSkeleton","props","className","classNames","AnimeCard","to","slug","src","thumbnail","alt","name","size","time","latestEpisode","NextArrow","onClick","style","borderRadius","PrevArrow","defaultSettings","dots","infinite","speed","slidesToShow","slidesToScroll","nextArrow","prevArrow","Carousel","useState","swiped","setSwiped","handleSwiped","useCallback","handleOnItemClick","e","stopPropagation","preventDefault","settings","onSwipe","React","Children","map","children","child","onClickCapture","responsive","breakpoint","AnimeCarousel","data","isLoading","finalSettings","setSlidesToShow","useEffect","findSlidesToShow","innerWidth","window","i","currentResponsive","addEventListener","Skeleton","Array","fill","_","anime","useFetchList","category","enabled","useQuery","getList","Section","title","animeData","isArray","TextIcon","iconSize","Icon","icon","iconClassName","textClassName","text","Slide","BiTime","views","toString","Image","useFetchSlide","getSlide","SlideCarousel","slides","slide","sections","reverse","HomePage","section"],"mappings":"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","file":"static/js/7.217996d1.chunk.js","sourcesContent":["class Storage {\n  static clear() {\n    localStorage.clear();\n  }\n\n  static remove(storageKey: string, filter: object) {\n    const rawList = localStorage.getItem(storageKey);\n\n    if (!rawList) return;\n\n    const list: object[] = JSON.parse(rawList);\n\n    // Filter out the item we wanna remove\n    localStorage.setItem(\n      storageKey,\n      JSON.stringify(list.filter((item) => !compareTwoObject(item, filter)))\n    );\n  }\n\n  static create(storageKey: string, value: object) {\n    const rawList = localStorage.getItem(storageKey);\n\n    if (!rawList) {\n      return localStorage.setItem(\n        storageKey,\n        JSON.stringify([value]) // Save value in array\n      );\n    }\n\n    const list = JSON.parse(rawList);\n\n    list.push(value);\n\n    localStorage.setItem(storageKey, JSON.stringify(list));\n  }\n\n  static findOne<T extends {}>(storageKey: string, filter = {}): T | undefined {\n    const rawList = localStorage.getItem(storageKey);\n\n    if (!rawList) return undefined;\n\n    const parsedList: T[] = JSON.parse(rawList);\n\n    if (isObjectEmpty(filter)) {\n      return parsedList[0];\n    }\n\n    return parsedList.find((item) => compareTwoObject(item, filter));\n  }\n\n  static find<T>(storageKey: string, filter = {}): T[] | [] {\n    const rawList = localStorage.getItem(storageKey);\n\n    if (!rawList) return [];\n\n    const parsedList: T[] = JSON.parse(rawList);\n\n    if (isObjectEmpty(filter)) {\n      return parsedList;\n    }\n\n    return parsedList.filter((item) => compareTwoObject(item, filter));\n  }\n\n  static update(storageKey: string, filter: object, value: object) {\n    this.remove(storageKey, filter);\n\n    const item = this.findOne(storageKey, filter);\n\n    const updatedItem = { ...item, ...value };\n\n    return this.create(storageKey, updatedItem);\n  }\n\n  static has(storageKey: string, filter: object) {\n    const item = this.findOne(storageKey, filter);\n\n    if (!item) return false;\n\n    return !isObjectEmpty(item);\n  }\n}\n\nconst isObjectEmpty = (obj: object) => JSON.stringify(obj) === \"{}\";\n\n// check if object one contains all property and value of object two.\nconst compareTwoObject = <T, U extends keyof T>(obj1: T, obj2: T) => {\n  let isComparedCount = 0;\n\n  const entries = Object.entries(obj2);\n\n  for (const [key, value] of entries) {\n    if (obj1[key as U] === value) {\n      isComparedCount++;\n    }\n  }\n\n  return isComparedCount === entries.length;\n};\n\nexport default Storage;\n","import classNames from \"classnames\";\nimport React from \"react\";\n\ninterface AnimeCardSkeletonProps {\n  className?: string;\n}\n\nconst AnimeCardSkeleton = (props: AnimeCardSkeletonProps) => {\n  return (\n    <div className={classNames(\"-space-x-2 px-2\", props.className)}>\n      <div className=\"w-full h-32\">\n        <div className=\"bg-gray-600 w-full h-full\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default AnimeCardSkeleton;\n","import classNames from \"classnames\";\nimport React from \"react\";\nimport { AiFillPlayCircle } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nimport { Anime } from \"../types\";\nimport Image from \"./Image\";\n\ninterface AnimeCardProps extends Anime {\n  className?: string;\n}\n\nconst AnimeCard = (props: AnimeCardProps) => {\n  return (\n    <Link to={`/info/${props.slug}`}>\n      <div className={classNames(\"relative shadow-lg group\", props.className)}>\n        <Image\n          src={props.thumbnail}\n          alt={props.name}\n          className={classNames(\n            \"w-full h-32 object-cover rounded-md rounded-b-none\"\n          )}\n        />\n\n        <div className=\"absolute inset-0 invisible group-hover:visible bg-black bg-opacity-60 flex items-center justify-center\">\n          <AiFillPlayCircle size={50} className=\"text-white\" />\n        </div>\n\n        <div className=\"px-2 py-1 absolute top-2 left-2 max-w-24 bg-black rounded-md bg-opacity-80\">\n          <p className=\"text-white text-xs line-clamp-1\">\n            {props.time || props.latestEpisode?.name}\n          </p>\n        </div>\n      </div>\n      <div\n        className={classNames(\n          \"bg-background-darker p-3 w-full space-y-2 rounded-b-md min-h-4\"\n        )}\n      >\n        <p className=\"uppercase text-white font-medium text-sm line-clamp-2\">\n          {props.name}\n        </p>\n      </div>\n    </Link>\n  );\n};\n\nexport default AnimeCard;\n","import React, { PropsWithChildren, useCallback, useState } from \"react\";\nimport Slider, { Settings } from \"react-slick\";\nimport { BsChevronLeft, BsChevronRight } from \"react-icons/bs\";\nimport classNames from \"classnames\";\n\ninterface CarouselProps {\n  settings?: Settings;\n}\n\ninterface ArrowButtonProps {\n  onClick?: () => void;\n}\n\nfunction NextArrow(props: ArrowButtonProps) {\n  const { onClick } = props;\n  return (\n    <div\n      className={classNames(\n        \"bg-black absolute -right-6 transform -translate-y-1/2 top-1/2 p-3 cursor-pointer z-10\"\n      )}\n      style={{ borderRadius: \"50%\" }}\n      onClick={onClick}\n    >\n      <BsChevronRight size={20} className=\"text-white\" />\n    </div>\n  );\n}\n\nfunction PrevArrow(props: ArrowButtonProps) {\n  const { onClick } = props;\n  return (\n    <div\n      className={classNames(\n        \"bg-black absolute -left-6 transform -translate-y-1/2 top-1/2 p-3 cursor-pointer z-10\"\n      )}\n      style={{ borderRadius: \"50%\" }}\n      onClick={onClick}\n    >\n      <BsChevronLeft size={20} className=\"text-white\" />\n    </div>\n  );\n}\n\nconst defaultSettings = {\n  dots: true,\n  infinite: true,\n  speed: 500,\n  slidesToShow: 1,\n  slidesToScroll: 1,\n  nextArrow: <NextArrow />,\n  prevArrow: <PrevArrow />,\n};\n\nconst Carousel = (props: PropsWithChildren<CarouselProps>) => {\n  const [swiped, setSwiped] = useState(false);\n\n  const handleSwiped = useCallback(() => {\n    setSwiped(true);\n  }, [setSwiped]);\n\n  const handleOnItemClick = useCallback(\n    (e) => {\n      if (swiped) {\n        e.stopPropagation();\n        e.preventDefault();\n        setSwiped(false);\n      }\n    },\n    [swiped]\n  );\n\n  const settings = { ...defaultSettings, ...props.settings };\n\n  return (\n    <Slider onSwipe={handleSwiped} {...settings}>\n      {React.Children.map(props.children, (child) => (\n        <div onClickCapture={handleOnItemClick}>{child}</div>\n      ))}\n    </Slider>\n  );\n};\n\nexport default Carousel;\n","import React, { PropsWithChildren, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Settings } from \"react-slick\";\nimport AnimeCardSkeleton from \"../../skeletons/AnimeCardSkeleton\";\nimport { Anime } from \"../../types\";\nimport AnimeCard from \"../AnimeCard\";\nimport Carousel from \"../Carousel\";\nimport Skeleton from \"../Skeleton\";\n\nimport \"./AnimeCarousel.css\";\n\ninterface AnimeCarouselProps {\n  settings?: Settings;\n  isLoading?: boolean;\n  data: Anime[] | undefined;\n}\n\nconst defaultSettings = {\n  slidesToShow: 5,\n  slidesToScroll: 5,\n  infinite: false,\n  dots: false,\n  responsive: [\n    {\n      breakpoint: 1024,\n      settings: {\n        slidesToShow: 4,\n        slidesToScroll: 4,\n      },\n    },\n    {\n      breakpoint: 768,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 3,\n      },\n    },\n    {\n      breakpoint: 600,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 2,\n      },\n    },\n  ],\n};\n\nconst AnimeCarousel = (props: PropsWithChildren<AnimeCarouselProps>) => {\n  const { data = [], settings, isLoading } = props;\n  const finalSettings = { ...defaultSettings, ...settings };\n  const [slidesToShow, setSlidesToShow] = useState(\n    finalSettings.slidesToScroll\n  );\n  useEffect(() => {\n    const findSlidesToShow = () => {\n      const { innerWidth } = window;\n\n      const { responsive, slidesToScroll } = finalSettings;\n\n      if (innerWidth > responsive[0].breakpoint) {\n        setSlidesToShow(slidesToScroll);\n      }\n\n      for (let i = 1; i <= finalSettings.responsive.length; i++) {\n        const currentResponsive = responsive[responsive.length - i];\n\n        if (innerWidth <= currentResponsive.breakpoint) {\n          const settings = currentResponsive.settings as Settings;\n\n          setSlidesToShow(settings.slidesToShow!);\n\n          break;\n        }\n      }\n    };\n\n    window.addEventListener(\"resize\", findSlidesToShow);\n\n    findSlidesToShow();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (isLoading) {\n    return (\n      <Skeleton className=\"flex flex-wrap\">\n        {new Array(slidesToShow).fill(null).map((_, i) => (\n          <AnimeCardSkeleton key={i} className={`w-1/${slidesToShow}`} />\n        ))}\n      </Skeleton>\n    );\n  }\n\n  return !data.length ? (\n    <div className=\"w-full h-full flex items-center justify-center\">\n      <p className=\"text-gray-300 text-base \">Không có</p>\n    </div>\n  ) : (\n    <Carousel settings={finalSettings}>\n      {data.map((anime) => (\n        <AnimeCard {...anime} key={anime.slug} />\n      ))}\n    </Carousel>\n  );\n};\n\nexport default AnimeCarousel;\n","import { useQuery } from \"react-query\";\nimport { getList } from \"../services/anime\";\n\nconst useFetchList = (\n  category: string,\n  slug: string,\n  enabled: boolean = true\n) => {\n  return useQuery([{ category, slug }], () => getList({ category, slug }), {\n    enabled,\n  });\n};\n\nexport default useFetchList;\n","import { To } from \"history\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AnimeCarousel from \"../../components/AnimeCarousel\";\nimport useFetchList from \"../../hooks/useFetchList\";\nimport { Anime } from \"../../types\";\n\ninterface SectionProps {\n  title: string;\n  category?: string;\n  slug?: string;\n  to?: To;\n  data?: Anime[];\n}\n\nconst Section = (props: SectionProps) => {\n  const { title, to, category = \"\", slug = \"\", data: animeData } = props;\n\n  const { data, isLoading } = useFetchList(\n    category,\n    slug,\n    !Array.isArray(animeData)\n  );\n\n  return (\n    <div className=\"mt-6\">\n      <div className=\"flex items-baseline justify-between space-x-2 text-white mb-3\">\n        <h1 className=\"text-2xl font-medium\">{title}</h1>\n        {to && (\n          <Link to={to}>\n            <h1 className=\"text-base text-gray-400 hover:text-secondary transition duration-300\">\n              Xem tất cả\n            </h1>\n          </Link>\n        )}\n      </div>\n\n      <AnimeCarousel\n        data={animeData ? animeData : data?.data}\n        isLoading={isLoading}\n      />\n    </div>\n  );\n};\n\nexport default Section;\n","import classNames from \"classnames\";\nimport React from \"react\";\n\ninterface TextIconProps {\n  className?: string;\n  textClassName?: string;\n  iconClassName?: string;\n  icon: React.ComponentType<{ className?: string; size: number }>;\n  text: string;\n  iconSize?: number;\n}\n\nconst TextIcon = (props: TextIconProps) => {\n  const {\n    iconSize = 16,\n    icon: Icon,\n    className,\n    iconClassName,\n    textClassName,\n    text,\n  } = props;\n\n  return (\n    <div className={classNames(\"flex items-center\", className)}>\n      <Icon size={iconSize} className={iconClassName} />\n      <p className={classNames(\"line-clamp-1\", textClassName)}>{text}</p>\n    </div>\n  );\n};\n\nexport default TextIcon;\n","import React from \"react\";\nimport { BiTime } from \"react-icons/bi\";\nimport { Link } from \"react-router-dom\";\nimport Image from \"../../components/Image\";\nimport TextIcon from \"../../components/TextIcon\";\nimport { Anime } from \"../../types\";\n\nconst Slide = (props: Anime) => {\n  return (\n    <Link to={`/info/${props.slug}`}>\n      <div className=\"relative h-80\">\n        <div className=\"absolute inset-0 bg-gradient-to-b from-transparent rounded-md to-black bg-opacity-80\">\n          <div className=\"absolute bottom-0 w-2/3 space-y-2 p-6\">\n            <h1 className=\"text-white text-3xl line-clamp-2 font-medium\">\n              {props.name}\n            </h1>\n\n            <div className=\"flex items-center\">\n              <TextIcon\n                icon={BiTime}\n                iconClassName=\"text-gray-400 mr-1\"\n                text={props.views.toString()!}\n                textClassName=\"text-white text-sm\"\n              />\n            </div>\n          </div>\n        </div>\n        <Image\n          src={props.thumbnail!}\n          alt={props.name}\n          className=\"rounded-md w-full h-full object-cover\"\n        />\n      </div>\n    </Link>\n  );\n};\n\nexport default Slide;\n","import { useQuery } from \"react-query\";\nimport { getSlide } from \"../../services/anime\";\n\nconst useFetchSlide = () => {\n  return useQuery(\"slides\", getSlide);\n};\n\nexport default useFetchSlide;\n","import React from \"react\";\nimport Carousel from \"../../components/Carousel\";\nimport Skeleton from \"../../components/Skeleton\";\nimport Slide from \"./Slide\";\nimport useFetchSlide from \"./useFetchSlide\";\n\nconst SlideCarousel = () => {\n  const { data: slides, isLoading: isSlideLoading } = useFetchSlide();\n\n  return isSlideLoading ? (\n    <Skeleton className=\"w-full h-80\">\n      <div className=\"bg-gray-600 h-full w-full\"></div>\n    </Skeleton>\n  ) : (\n    <Carousel>\n      {slides?.map((slide) => (\n        <Slide {...slide} key={slide.slug} />\n      ))}\n    </Carousel>\n  );\n};\n\nexport default SlideCarousel;\n","import React from \"react\";\nimport { Anime } from \"../../types\";\nimport Storage from \"../../utils/Storage\";\nimport Section from \"./Section\";\nimport SlideCarousel from \"./SlideCarousel\";\n\nconst sections = [\n  {\n    title: \"Xem gần đây\",\n    data: Storage.find<Anime>(\"recent\").reverse(),\n  },\n  {\n    title: \"Mới cập nhật\",\n    category: \"recently\",\n  },\n  {\n    category: \"recommended\",\n    title: \"Hôm nay xem gì?\",\n  },\n  {\n    category: \"ranking\",\n    slug: \"ngay\",\n    title: \"Xem nhiều trong ngày\",\n  },\n];\n\nconst HomePage = () => {\n  return (\n    <div className=\"px-8 py-20 lg:px-20 lg:py-24 w-full h-full space-y-6\">\n      <div className=\"hidden md:block\">\n        <SlideCarousel />\n      </div>\n\n      <div className=\"space-y-6\">\n        {sections.map((section, i) => (\n          <Section {...section} key={i} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"sourceRoot":""}